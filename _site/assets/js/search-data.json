{"0": {
    "doc": "Contact us",
    "title": "Contact us",
    "content": "If you have questions about the code or the contents of this website, contact us at Sreejith Santhosh or [Mattia Serra][mserra@ucsd.edu]. ",
    "url": "/docs/Contact.html",
    
    "relUrl": "/docs/Contact.html"
  },"1": {
    "doc": "FTLE from Flows on Curved Surfaces",
    "title": "Lagrangian coherent structures for flows on curved surfaces",
    "content": "The MATLAB code for computing Coherent Structures based on Finite-Time-Lyapunov Exponents (FTLE) and Lagrangian deformation for flow on curved surfaces is available at this link. The following tutorial provides instructions on how to use the code. To understand the mathematical background or additional information on the methods discussed here, we refer you to the accompanying manuscript [1]. Please contact us if you encounter any issues with the code, and we will work with you to fix the problem and make it work with your dataset. Pre-requisites . The code was built on MATLAB R2023a in a Windows 10 system. The following MATLAB add-ons need to be installed to run the code, . | Parallel Computing Toolbox : The code uses parallelization methods provided in this toolbox to run the advection of tracer particles, | Lidar Toolbox : Provides mesh processing capabilities, | Computer Vision Toolbox : Provides mesh processing capabilities. | . We have tested these codes on a Mac OSX 15 and Ubuntu 20 operating systems. We also assume that Git is installed and set up on the system, as all the code is hosted on GitHub. If not, we refer you to this link. Installation . To install the code, navigate to the path where you would want to install it on the terminal and clone the GitHub repository using the code . git clone https://github.com/SreejithSanthosh/curvedSurfaceFTLE.git . This will generate a directory called curvedSurfaceFTLE, which contains all the code. To check if all the necessary components are working, run main.m on MATLAB. This runs the deformation analysis on an synthetic example dataset given in ./Data/growingSphere.mat and presents the result given below. In addition, the visualization of the velocity field, forward and backward advection of tracer particles would be given in /saveResults directory as vizVelocity.mp4 , forAdvct.mp4, and bckAdvct.mp4 respectively. The Lagrangian deformation results above are for the time interval \\((t0=1,tf=23)\\). \\(\\Lambda\\) is the FTLE field, \\(\\xi\\) is the axis of maximum deformation and \\({}_{iso}\\Lambda\\) quantifies the isotropic Lagrangian deformation experienced. For further details on these quantities and the algorithm used to compute them, we refer you to the accompanying manuscript [1]. Further development of this code is currently ongoing to improve the robustness of the method and increase its speed. To get those updates, use the command . git pull . ",
    "url": "/docs/Tutorials/FTLECurvedSurface.html#lagrangian-coherent-structures-for-flows-on-curved-surfaces",
    
    "relUrl": "/docs/Tutorials/FTLECurvedSurface.html#lagrangian-coherent-structures-for-flows-on-curved-surfaces"
  },"2": {
    "doc": "FTLE from Flows on Curved Surfaces",
    "title": "Data required for Langrangian analaysis and Formating",
    "content": "To perform the Lagrangian analysis, we require the velocity field \\(\\mathbf{v}(\\mathbf{x},t)\\) that quantifies the material flow on a manifold \\(\\mathbf{x}\\in\\mathcal{M}(t)\\). The Lagrangian Analysis method described here applies to both static surfaces, where the manifold is time-independent, and dynamic surfaces, where the manifold is time-dependent. NOTE: Obtaining velocity data from tissue mechanics and active nematic simulations is relatively simple, but obtaining them from experimental live imaging of biological systems is more difficult. Several methods exist to extract this information, such as ImSAnE and TubULAR. The manifold information \\(\\mathcal{M}\\) is stored as a mesh with discrete node points \\(\\mathbf{x}_i = [x_i,y_i,z_i]\\) , where \\(i\\in\\{1,N_p(t)\\}\\) and \\(N_p(t)\\) is total number of nodes on the manifold at time \\(t\\). The connectivity of the mesh is given by a triangulation \\(T\\) which is a set of all the mesh faces. Each face \\(j\\in\\{1,N_f(t)\\}\\) consists of set of three nodes \\(\\{i_1,i_2,i_3\\}\\) that form face \\(j\\). \\(N_f(t)\\) denotes the total number of faces on the mesh at time \\(t\\). The velocity field is stored as \\(\\mathbf{v}_i(t)=[v_i^1(t),v_i^2(t),v_i^3(t)]\\) where \\(v_i^1(t),v_i^2(t)\\) and \\(v_i^3(t)\\) are the x,y and z-component of the velocity at node \\(i\\) at time \\(t\\). Before you run the Lagrangian analysis, the velocity field data and the manifold on which it is defined need to be stored in a .mat file to be read by the MATLAB code, where the variables are . | time : vector of size (\\(1,N_t\\)), where \\(N_t\\) is the number of time points of the dataset. | x : cell array of size (\\(N_t,1\\)). Each cell array element x{k} \\(k\\in\\{1,N_t\\}\\) is vector of size \\((N_p(k),1)\\) containing the x-coordinate of all the \\((N_p(k)\\) mesh nodes, where \\(N_p(k)\\) is the total number mesh nodes at \\(t = k\\). Similarly, the y and z components of the mesh nodes are stored in y and z. | TrianT : cell array of size (\\(N_t,1\\)). The cell array element TrianT{k} \\(k\\in\\{1,N_t\\}\\) is a matrix of size \\((N_f(k),3)\\) whose \\(j-th\\) raw contains the mesh connectivity of face \\(j\\) (e.g. \\([i_1,i_2,i_3]\\) for a mesh face with nodes \\(i_1,i_2,i_3\\)). \\(N_f(k)\\) denotes the number of mesh faces at time \\(t = k\\). | v : cell array of size (\\(3,N_t\\)) , where the cell array element v{1,k} \\(k\\in\\{1,N_t\\}\\) is a matrix of size \\((N_p(k),1)\\) with the x-component of the velocity all the mesh nodes. \\(N_p(k)\\) is the total number of mesh nodes at \\(t=k\\). Similarly, the y and z components of the velocity are stored in v{2,k} and v{3,k}. | . An example dataset is provided in ./Data/growingSphere.mat in the code directory, which can be visualized by running ./Data/vizExampleData.m. NOTE: An accurate Lagrangian Analysis requires that the mesh representation of the manifold is sampled uniformly, whereby the mesh faces are approximately of equal size; deviation from this may result in spurious results. The finer the mesh faces, the better the accuracy of the advection and deformation computed. If the original data does not meet this requirement, remeshing is recommended. Performing Lagrangian Analysis . We now explain how to run the code main.m to compute the Lagrangian deformation information for a chosen time interval \\([t0,tf]\\). | Load the data : Once the data is formatted appropriately as described above, it can be loaded onto the script by providing the right path load(PATH TO THE DATA FILE); Nt = size(time,2); . | Setting parameters for the simulation : A few parameters need to be set depending on the type of data and the system configuration on which you are running the script: . | isStatic : should be set to isStatic = 1 if the mesh surface on which the motion happens is time-independent and isStatic = 0 if the mesh changes over time. The code runs faster for static meshes. | cpu_num : The code parallelizes the Lagrangian analysis using the parfor method. Therefore, set this variable to cpu_num = Nc, where \\(Nc\\) is the number of CPU cores available. Note that a copy of the dataset is sent to each core, which may cause the total data in RAM to exceed the systemâ€™s capabilities. For example, if your data is x GB and you parallelize over Nc cores, the total RAM required is \\(\\approx\\) &gt; x * Nc GB. | Plotting parameters Nplot and fntSz: Nplot sets the number of frames that are saved in the video while plotting the advection results. fntSz similarly sets the font size of the text and elements on those plots. | Advection parameters ct_f and ct_i and dt: If you need to analyze the Lagrangian deformation from \\(t=t0\\) to \\(t=tf\\), input ct_f and ct_i so that time(ct_f) = tf and time(ct_0) = t0. The parameter dt is the time-step for advection. | Regularization parameter regulFac sets the strength of the regularization used while computing the Lagrangian deformation quantities for noisy velocity fields. For further information we refer you to SI Section S3 in the accompanying manuscript [1]. | . | Running Code: After setting the parameters mentioned above, run the code. The code will visualize the velocity data on the surface, forward advection \\(t0\\to tf\\) and backward advection \\(tf \\to t0\\) of tracer particles. This will be saved in the ./SaveResults folder. The deformation information will be displayed as a MATLAB plot using the code written in %% Calculate and Visualize the FTLE values. | . ",
    "url": "/docs/Tutorials/FTLECurvedSurface.html#data-required-for-langrangian-analaysis-and-formating",
    
    "relUrl": "/docs/Tutorials/FTLECurvedSurface.html#data-required-for-langrangian-analaysis-and-formating"
  },"3": {
    "doc": "FTLE from Flows on Curved Surfaces",
    "title": "Eulerian coherent structures for flows on curved surfaces",
    "content": "The MATLAB code to compute Eulerian coherent structures based on eigen-values of strain rate for flow on curved surfaces is available at this link. The follwing tutorial provides explanation on how to use the code. To understand the mathematical background or additional information on the methods discussed here, we refer you to the accompanying manuscript [1]. Pre-requisites,data-formatting,Installation: We recommend users read the tutorial given above for Lagrangian analysis, as the Eulerian code has the same software pre-requisites and data-formatting requirements. To install the code, clone the GitHub repository using the code . git clone https://github.com/SreejithSanthosh/curvedSurface-OECS.git . To make sure that the code works, run the script main.m on MATLAB. This runs the Eulerian analysis on the example dataset given in ./Data/growingSphere.mat and presents the result given below. The result above visualizes the Eulerian coherent structures at \\(t=1\\). The regions with high values of the largest eigenvalue of strain rate \\(s_2(\\mathbf{x},t=1)\\) corresponds to repellers and regions with low values of the smallest eigenvalue of the strain rate \\(s_1(\\mathbf{x},t=1)\\) corresponds to attractors. The corresponding eigen-vector axis \\(e_2(\\mathbf{x},t=1)\\) and \\(e_1(\\mathbf{x},t=1)\\) corresponds to the axis of maxmimum repulsion and attraction. Performing Eulerian Analysis . We now explain how to run the code main.m to compute the Eulerian coherent structures for a given flow field. | Load the data : Once the data is formatted appropriately as described above, it can be loaded onto the script by providing the right path load(PATH TO THE DATA FILE); Nt = size(time,2); . | Setting parameters for the Eulerian computation : . | regulFac : Regularization parameter used for estimating the strain-rate. Similar to the regularization parameter in the Lagrangian analysis. | t0: Sets the time-point to do the Eulerian analysis. | . | Running Code: After setting the parameters mentioned above, run the code. The code will visualize the velocity data, the eigenvalues \\((s_1,s_2)\\) and eigenvectors \\((e_1,e_2)\\) of the strain rate at \\(t = t0\\). | . ",
    "url": "/docs/Tutorials/FTLECurvedSurface.html#eulerian-coherent-structures-for-flows-on-curved-surfaces",
    
    "relUrl": "/docs/Tutorials/FTLECurvedSurface.html#eulerian-coherent-structures-for-flows-on-curved-surfaces"
  },"4": {
    "doc": "FTLE from Flows on Curved Surfaces",
    "title": "References",
    "content": "[1] : S. Santhosh, C. Zhu, B. Fencil, M. Serra. Coherent Structures in Active Flows on Dynamic Surfaces, pre-print ,(2025) . ",
    "url": "/docs/Tutorials/FTLECurvedSurface.html#references",
    
    "relUrl": "/docs/Tutorials/FTLECurvedSurface.html#references"
  },"5": {
    "doc": "FTLE from Flows on Curved Surfaces",
    "title": "FTLE from Flows on Curved Surfaces",
    "content": " ",
    "url": "/docs/Tutorials/FTLECurvedSurface.html",
    
    "relUrl": "/docs/Tutorials/FTLECurvedSurface.html"
  },"6": {
    "doc": "FTLE from 2-D and 3-D velocity data",
    "title": "FTLE from 2-D and 3-D velocity data",
    "content": "Under construction. ",
    "url": "/docs/Tutorials/FTLEEuclidean.html",
    
    "relUrl": "/docs/Tutorials/FTLEEuclidean.html"
  },"7": {
    "doc": "FTLE from 2-D and 3-D Noisy and Sparse Trajectories",
    "title": "FTLE from 2-D and 3-D Noisy and Sparse Trajectories",
    "content": "The Python code for computing FTLE using the noisy and sparse trajectories are given here. The functions HyperbolicLCS_2D and HyperbolicLCS_3D computes FTLE from sparse trajectories in 2D and 3D flow data. To understand the mathematical background or additional information on the methods discussed here, see the accompanying manuscript [1]. [1] Mowlavi, S., Serra, M., Maiorino, E., &amp; Mahadevan, L. (2022). Detecting Lagrangian coherent structures from sparse and noisy trajectory data. Journal of Fluid Mechanics, 948, A4. ",
    "url": "/docs/Tutorials/FTLESparseTrajectories.html",
    
    "relUrl": "/docs/Tutorials/FTLESparseTrajectories.html"
  },"8": {
    "doc": "Recent Applications to Living/Active Matter",
    "title": "Recent Applications to Living/Active Matter",
    "content": "Below, we list recent publications leveraging Coherent Structures to understand and control living and active matter flows. | Dynamic Morphoskeletons in Development: Robust quantification and experimental variability of in-toto morphogenetic flows during Chick and Drosophila gastrulation. Serra, M., Streichan, S., Chuai, M., Weijer, C. J., &amp; Mahadevan, L. (2020). Dynamic morphoskeletons in development. Proceedings of the National Academy of Sciences, 117(21), 11444-11449. | A multimodal zebrafish developmental atlas reveals the state-transition dynamics of late-vertebrate pluripotent axial progenitors: Repelling LCSs reveals hidden embryo compartmentalization and subsequent fate bifurcation in Zebrafish embryonic development during body axis elongation. Lange, M., Granados, A., VijayKumar, S., Bragantini, J., Ancheta, S., Kim, Y. J., â€¦ &amp; Royer, L. A. (2024). A multimodal zebrafish developmental atlas reveals the state-transition dynamics of late-vertebrate pluripotent axial progenitors. Cell, 187(23), 6742-6759. | Defect-mediated dynamics of coherent structures in active nematics: Attracting and Repelling LCSsâ€”steered by topological defectsâ€”reveal distinct, dynamic transport and deformation patterns in active nematics. Serra, M., Lemma, L., Giomi, L., Dogic, Z., &amp; Mahadevan, L. (2023). Defect-mediated dynamics of coherent structures in active nematics. Nature Physics, 19(9), 1355-1361. | Optimal Control of Short-Time Attractors in Active Nematics: Attracting Eulerian Coherent Structures enables the design of short-time material traps in Active Nematics flows. Sinigaglia, C., Braghin, F., &amp; Serra, M. (2024). Optimal control of short-time attractors in active nematics. Physical Review Letters, 132(21), 218302. | A mechanochemical model recapitulates distinct vertebrate gastrulation modes: Mechanistic principles, Control and phenotypic variability of Attracting LCSs in multicellular flows during avian gastrulation. Serra, M., Serrano NÃ¡jera, G., Chuai, M., Plum, A. M., Santhosh, S., Spandan, V., â€¦ &amp; Mahadevan, L. (2023). A mechanochemical model recapitulates distinct vertebrate gastrulation modes. Science advances, 9(49), eadh8152. | Control of epiblast cell fate by mechanical cues: Repelling LCSs reveals hidden embryo compartmentalization and mediate cell-fate bifurcations in chick embryogenesis at stages HH4-HH8. Guillot, C., Djeffal, Y., Serra, M., &amp; PourquiÃ©, O. (2024). Control of epiblast cell fate by mechanical cues. bioRxiv, 2024-06. | Morphogen Patterning in Dynamic Tissues: Attracting and Repelling LCSs mediates diffusive morphogen transport in dynamic tissues, revealing synergies between morphogenetic movements and morphogen patterning. Plum, A. M., &amp; Serra, M. (2025). Morphogen Patterning in Dynamic Tissues. bioRxiv, 2025-01. | . ",
    "url": "/docs/LivingandActiveMatter.html",
    
    "relUrl": "/docs/LivingandActiveMatter.html"
  },"9": {
    "doc": "Tutorial - FTLE codes",
    "title": "Tutorial - FTLE codes",
    "content": "Here, we provide codes and tutorials for computing FTLE and Coherent Structures on 2D flows on dynamic surfaces, accompanying the manuscript: . [1] S. Santhosh, C. Zhu, B. Fencil, M. Serra. Coherent Structures in Active Flows on Dynamic Surfaces, preprint,(2025) . For completeness, we also refer to the codes and tutorials for computing FTLE and Coherent Structures from general 2D and 3D sparse and noisy trajectory data, accompanying the manuscript: . [2] Mowlavi, S., Serra, M., Maiorino, E., &amp; Mahadevan, L. (2022). Detecting Lagrangian coherent structures from sparse and noisy trajectory data. Journal of Fluid Mechanics, 948, A4. For completeness, we provide codes and tutorials for computing FTLE and Coherent Structures from general 2D and 3D velocity fields. ",
    "url": "/docs/TutorialFTLECode.html",
    
    "relUrl": "/docs/TutorialFTLECode.html"
  },"10": {
    "doc": "Introduction",
    "title": "What are Coherent Structures?",
    "content": "Coherent Structures are persistent, robust structures in a flow that summarize complex fluid trajectories and material deformations [1]. Lagrangian Coherent Structures (LCSs) [1] summarize material transport over a finite time interval and are computable from fluid trajectories. Eulerian Coherent Structures [2], on the other hand, quantify short-time material transport and are computable from single snapshots of the velocity field. There exist different types of Coherent Structures and different methods for computing them from velocity or trajectory flow data (see, e.g., [3]). Here, we focus on Attracting and Repelling Coherent Structuresâ€”special surfaces in 3D flows or curves in 2D flows where nearby tracer particles maximally converge or separate. We identify Attracting and Repelling Coherent Structures based on the Finite Time Lyapunov Exponent (FTLE) [4,5] and instantaneous Lyapunov Exponents [6] fields, which are the most common due to their simplicity and straightforward visualization. (a) Deformation of a fluid patch close to a saddle point (i.e., a fixed point) of a steady (i.e., time independent) velocity (left), and toÂ Attracting and repelling LCSs in an unsteady (i.e., time dependent) velocity (right). Attracting and Repelling Coherent Structures are special surfaces in 3D flows or curves in 2D flows where nearby tracer particles maximally converge or separate. (b-i) Examples of Coherent Structures in physical and biological flows. (b) Short-time attractors (or Attracting Eulerian Coherent Structures) aid search and rescue operations at sea [7]. (c-d) Attracting and Repelling LCSs in (c) atmospheric flows [8] and (d) CFD flows for a cylinder wake [9]. (e) FTLE and Attracting LCSs in active nematic flows [10]. (f) FTLE and Attracting LCSs in a beating zebrafish heart [10]. (g) FTLE and Attracting LCSs in multicellular flows during avian gastrulation [11]. ",
    "url": "/#what-are-coherent-structures",
    
    "relUrl": "/#what-are-coherent-structures"
  },"11": {
    "doc": "Introduction",
    "title": "Why is coherent structure identification useful?",
    "content": "Consider the flow field around a saddle point (Panel (a)): a nearby patch of fluid (cyan) converges to the fixed point along its stable manifold (red curve) and separates along the unstable manifold (blue curve). Stable and unstable manifolds of saddle points, however, have important limitations: i) are meaningful only in steady velocities (\\(\\mathbf{v}(\\mathbf{x})\\)); ii) describe the evolution of material patches only in the infinite-time limit (not over finite or short times); iii) are static (do not deform/move in time). Repelling and Attracting LCSs generalize stable and unstable manifolds of fixed points, overcoming the above limitations. i) They are computable for both steady and unsteady (\\(\\mathbf{v}(\\mathbf{x},t)\\)) velocity fields; ii) they shape material patches over the desired time interval of interest \\([t_0, t]\\); iii) they are dynamic (move and deform over time); iv) they reveal regions on the flow with the highest Lagrangian deformations; v) they are objective; i.e., invariant to time-dependent rotations and translations of the coordinate system used to describe motion. Overall, Repelling and Attracting LCSs provide a reduced representation of a temporally and spatially varying flow, enabling robust quantification of complex and noisy velocity datasets, a systematic comparison between flows in different experiments and comparisons with theoretical models. Coherent structures also provide a simplified understanding of flow geometry, identify dynamic domain boundaries, and provide a new perspective for optimal flow control. While Coherent Structures were initially motivated to analyze atmospheric and oceanic flows, recent works have demonstrated their utility in studying biological systems and active matter, see e.g. panels (e-g) above and examples of recent papers [10-15] summarized here. ",
    "url": "/#why-is-coherent-structure-identification-useful",
    
    "relUrl": "/#why-is-coherent-structure-identification-useful"
  },"12": {
    "doc": "Introduction",
    "title": "How to calculate FTLE?",
    "content": "Finite-Time-Lyapunov-Exponents enable identifying Repelling and Attracting LCSs as ridges (or regions with high FTLE values) of a scalar field [4,5]. We describe how to compute FTLE and Attracting/Repelling LCSs for a 2D flow described by the velocity field \\(\\mathbf{v}(\\mathbf{x},t)\\). For the new formalism to compute FTLE for flows on dynamic 2D surfaces embedded in 3D, please refer to [10]. We assume a simulated or measured velocity field is given. If one needs to reconstruct the velocity from experimental flow data, Particle Image Velocimetry methods are common (See Ref, and PIVLab is a MATLAB toolbox). To study the Lagrangian features of the flow, we compute the flow (or trajectory) map . $$ \\mathbf{F}_{t_0}^t(\\mathbf{x}_0) = \\mathbf{x}_0 + \\int_{t_0}^t \\mathbf{v}(\\mathbf{F}_{t_0}^\\tau(\\mathbf{x}_0),\\tau) d\\tau,$$ that maps initial positions \\((\\mathbf{x}_0)\\) at \\(t_0\\) to their time \\(t\\) position \\(\\mathbf{F}_{t_0}^t(\\mathbf{x}_0)\\). The deformation gradient \\(\\mathbf{\\nabla}_{\\mathbf{x}_0}\\mathbf{F}_{t_0}^t(\\mathbf{x}_0)\\) quantifies derivatives of the flow map with respect to small changes in initial conditions and is represented as a 2x2 matrix for any \\((\\mathbf{x}_0)\\) and time interval \\([t_0,t]\\). The FTLE field is given by . $$ \\Lambda_{t_0}^t(\\mathbf{x}_0) = \\frac{1}{|t-t_0|}\\text{log}(\\lambda_2(\\mathbf{x}_0)),$$ where \\(\\lambda_2(\\mathbf{x}_0)\\) is the largest singular value of \\(\\mathbf{\\nabla}_{\\mathbf{x}_0}\\mathbf{F}_{t_0}^t(\\mathbf{x}_0)\\). High \\(\\lambda_2(\\mathbf{x}_0)\\) (or \\(\\Lambda_{t_0}^t(\\mathbf{x}_0)\\)) mark initial fluid positions \\((\\mathbf{x}_0)\\) where initially close tracers will highly separate by time \\(t\\) (left panel). Repelling LCSs are identified by ridges (i.e. regions of high values) of the \\(\\Lambda_{t_0}^t(\\mathbf{x}_0)\\) (or \\(_{f}\\Lambda\\)) computed from trajectories in forward time (left panel). By contrast, Attracting LCSs are identified by ridges (i.e. regions of high values) of the \\(\\Lambda_{t}^{t_0}(\\mathbf{x}_t)\\) (or \\(_{b}\\Lambda\\)) computed from trajectories in backward time (right panel). Attracting LCSs locate the final positions \\((\\mathbf{x}_t)\\) where initially distinct tracers will maximally converge. ",
    "url": "/#how-to-calculate-ftle",
    
    "relUrl": "/#how-to-calculate-ftle"
  },"13": {
    "doc": "Introduction",
    "title": "References",
    "content": "[1] : Haller, G., 2015. Lagrangian coherent structures. Annual review of fluid mechanics, 47(1) . [2] : Serra, M., &amp; Haller, G. (2016). Objective Eulerian coherent structures. Chaos: An Interdisciplinary Journal of Nonlinear Science, 26(5) . [3] : Hadjighasem, A., Farazmand, M., Blazevski, D., Froyland, G., &amp; Haller, G. (2017). A critical comparison of Lagrangian methods for coherent structure detection. Chaos: An Interdisciplinary Journal of Nonlinear Science, 27(5). [4] : Haller, G. (2001). Distinguished material surfaces and coherent structures in three-dimensional fluid flows. Physica D: Nonlinear Phenomena, 149(4), 248-277. [5] : Shadden, S. C., Lekien, F., &amp; Marsden, J. E. (2005). Definition and properties of Lagrangian coherent structures from finite-time Lyapunov exponents in two-dimensional aperiodic flows. Physica D: Nonlinear Phenomena, 212(3-4), 271-304. [6] : Nolan, P. J., Serra, M., &amp; Ross, S. D. (2020). Finite-time Lyapunov exponents in the instantaneous limit and material transport. Nonlinear Dynamics, 100(4), 3825-3852. [7] : Serra, M., Sathe, P., Rypina, I., Kirincich, A., Ross, S. D., Lermusiaux, P., â€¦ &amp; Haller, G. (2020). Search and rescue at sea aided by hidden flow structures. Nature communications, 11(1), 2525. [8] : Lekien, F., &amp; Ross, S. D. (2010). The computation of finite-time Lyapunov exponents on unstructured meshes and for non-Euclidean manifolds. Chaos: An Interdisciplinary Journal of Nonlinear Science, 20(1). [9] : Kasten, J., Petz, C., Hotz, I., Hege, H. C., Noack, B. R., &amp; Tadmor, G. (2010). Lagrangian feature extraction of the cylinder wake. Physics of fluids, 22(9). [10] : S. Santhosh, C. Zhu, B. Fencil, M. Serra. Coherent Structures in Active Flows on Dynamic Surfaces, pre-print ,(2025) . [11] : Serra, M., Streichan, S., Chuai, M., Weijer, C. J., &amp; Mahadevan, L. (2020). Dynamic morphoskeletons in development. Proceedings of the National Academy of Sciences, 117(21), 11444-11449. [12] : Lange, M., Granados, A., VijayKumar, S., Bragantini, J., Ancheta, S., Kim, Y. J., â€¦ &amp; Royer, L. A. (2024). A multimodal zebrafish developmental atlas reveals the state-transition dynamics of late-vertebrate pluripotent axial progenitors. Cell, 187(23), 6742-6759. [13] : Serra, M., Lemma, L., Giomi, L., Dogic, Z., &amp; Mahadevan, L. (2023). Defect-mediated dynamics of coherent structures in active nematics. Nature Physics, 19(9), 1355-1361. [14] : Sinigaglia, C., Braghin, F., &amp; Serra, M. (2024). Optimal control of short-time attractors in active nematics. Physical Review Letters, 132(21), 218302. [15] : Serra, M., Serrano NÃ¡jera, G., Chuai, M., Plum, A. M., Santhosh, S., Spandan, V., â€¦ &amp; Mahadevan, L. (2023). A mechanochemical model recapitulates distinct vertebrate gastrulation modes. Science advances, 9(49), eadh8152. IMPORTANT NOTE: This page is intended to provide a minimal, elementary introduction to Coherent Structures and a limited set of references, primarily for the biology and soft matter physics communities. We refer readers to the aforementioned publications and their references for an extensive list. ",
    "url": "/#references",
    
    "relUrl": "/#references"
  },"14": {
    "doc": "Introduction",
    "title": "Introduction",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  }
}
